function [model,state] = IPhreeQC(model,state,i)
%
% SYNOPSIS:
%   function [problem, state] = IPhreeQC(model, state)
%
% DESCRIPTION: 
% This function is special for scale depositon calculation.
% In this function, after every timestep, concentration of ions goes to the
% iphreeqc modules and equilibrium concentration will calculate. after that
% it calculates new porosity and permeability and update operator in model.
%
%
% PARAMETERS:
%   model         - Model instance
%   state         - State at current time-step
%
% RETURNS:
%   model         - Updated model (updated rock prop and operators)
%   state         - Updated state (updated ion concentrations)
%
%
%{
%Ahmadreza Shojaee
%}
t = i;
if t>=2
    pH = model.prop.pH{t-1,1};
    pe = model.prop.pe{t-1,1};
    Anhydrite = model.prop.Anhydrite{t-1,1};
    Gypsum = model.prop.Gypsum{t-1,1};
    Celestite = model.prop.Celestite{t-1,1};
    Barite = model.prop.Barite{t-1,1};
    Calcite = model.prop.Calcite{t-1,1};
    Dolomite = model.prop.Dolomite{t-1,1};
end
iphreeqc = model.iphreeqc;
rhoWS = model.fluid.rhoWS;
bW = model.fluid.bW;
temp = model.initial_props.T;
prop_saver = zeros(model.G.cells.num,2);
calcite_surf=(1-model.initial_props.poro).*model.G.cells.volumes(1).*2710.*1000; %celcite surface gram;
for i=1:model.G.cells.num
    SO4 = state.c_SO4(i)*1e6/96.0616; %mmol/kgw
    Ca  = state.c_Ca(i)*1e6/40.08;
    Sr  = state.c_Sr(i)*1e6/87.62;
    Ba  = state.c_Ba(i)*1e6/137.34;
    Na  = state.c_Na(i)*1e6/22.9898;
    Mg  = state.c_Mg(i)*1e6/24.312;
    CO3 = state.c_CO3(i)*1e6/61.0173;
    Cl  = state.c_Cl(i)*1e6/35.453;
    p = state.pressure(i)/barsa/1.01325;
    rhow = rhoWS/bW(state.pressure(i));
    pv = model.G.cells.volumes(i)*model.rock.poro(i);
    sw = state.s(i,1);
    m_water  = pv*sw*rhow*(1-state.c_SO4(i)-state.c_Ca(i)-state.c_Sr(i)-state.c_Ba(i)-state.c_Na(i)-state.c_Mg(i)-state.c_CO3(i)-state.c_Cl(i));
    if t==1
        pHi = 7;
        pei = 4;
        Anhydrite_i = 0;
        Gypsum_i = 0;
        Celestite_i = 0;
        Barite_i = 0;
        Calcite_i = calcite_surf./100;%
        Calcite_i = Calcite_i(1);
        Dolomite_i = 0;%1*(1-model.rock.poro(i))*model.G.cells.volumes(i)*2840*1000/184; %dolomite mole;;
    else
        pHi = pH(i);
        pei = pe(i);
        Anhydrite_i = Anhydrite(i);
        Gypsum_i = Gypsum(i);
        Celestite_i = Celestite(i);
        Barite_i = Barite(i);
        Calcite_i = Calcite(i);
        Dolomite_i = Dolomite(i);
    end
    IPCstringCell={'Title Scale',...
    'SURFACE_MASTER_SPECIES',...
        'Surf_a  Surf_aOH',...
        'Surf_b  Surf_bH',...
    'SURFACE_SPECIES',...	
        'Surf_aOH = Surf_aOH',...
        'log_k    0',...
        'Surf_bH = Surf_bH',...
        'log_k    0',...
        'Surf_aOH + H+ + SO4-2 = Surf_aSO4- + H2O',...
        'log_k    2.1',...
        'Surf_aOH + HCO3- = Surf_aCO3- + H2O',...
        'log_k   5.8',...
        'Surf_aOH + H+ = Surf_aOH2+',...
        'log_k   11.8',...
        'Surf_bH = Surf_b- + H+',...
        'log_k    -5.1',...
        'Surf_bH + Ca+2 = Surf_bCa+ + H+',...
        'log_k   1.74',...
        'Surf_bH + Mg+2 = Surf_bMg+ + H+',...
        'log_k   1.74',...
    'SOLUTION 1',...
    ['ph ', num2str(pHi)],...
    ['pe ', num2str(pei)],...
    ['temp ', num2str(temp)],...
    ['pressure ', num2str(p)],...
    ['density ', num2str(rhoWS)],...
    ['Ca ', num2str(Ca)],...
    ['Sr ', num2str(Sr)],...
    ['Ba ', num2str(Ba)],...
    ['S(6) ',num2str(SO4),' as SO4-2'],...
    ['Mg ', num2str(Mg)],...
    ['C(4) ', num2str(CO3)],...
    ['Na ', num2str(Na)],...
    ['Cl ', num2str(Cl)],...
    'PHASES',...
    'Anhydrite 17',...
        'CaSO4 = Ca+2 + SO4-2',...
        'log_k           -4.36',...
        'delta_h -1.71 kcal',...
        '-analytical     197.52  0.0     -8669.8         -69.835         0.0',...
    'Barite 144',...
        'BaSO4 = Ba+2 + SO4-2',...
        'log_k           -9.97',...
        'delta_h 6.35 kcal',...
        '-analytical     136.035         0.0     -7680.41        -48.595         0.0',...
    'Celestite 143',...
        'SrSO4 = Sr+2 + SO4-2',... 
        'log_k           -6.63',...
        'delta_h -1.037 kcal',...
        '-analytical     -14805.9622     -2.4660924      756968.533      5436.3588       -40553604.',...
    'Gypsum 18',...
        'CaSO4:2H2O = Ca+2 + SO4-2 + 2H2O',...
        'log_k           -4.58',...
        'delta_h -0.109 kcal',...
        '-analytical     68.2401         0.0     -3221.51        -25.0627        0.0',...
    'Calcite             12',...
        'CaCO3 = Ca+2 + CO3-2',... 
        'log_k           -8.48',... 
        'delta_h -2.297 kcal',... 
        '-analytical     -171.9065       -0.077993       2839.319        71.595  0.0',... 
    'Dolomite            401',...
        'CaMg(CO3)2 = Ca+2 + Mg+2 + 2CO3-2',...
        'log_k           -17.09',...
        'delta_h -9.436 kcal',...
    'EQUILIBRIUM_PHASES 1',...
    ['Anhydrite 0 ', num2str(Anhydrite_i/m_water)],...
    ['Barite 0 ', num2str(Barite_i/m_water)],...
    ['Celestite 0 ', num2str(Celestite_i/m_water)],...
    ['Gypsum 0 ', num2str(Gypsum_i/m_water)],...
    ['Calcite 0 ', num2str(Calcite_i/m_water)],...
    ['Dolomite 0 ', num2str(Dolomite_i/m_water)],...
    'SURFACE 1',...
        '-equil solution 1',...
        '-sites_units density',...
        ['Surf_aOH  2 0.011 ',num2str(calcite_surf/m_water)],...
        ['Surf_bH   2 0.011 ',num2str(calcite_surf/m_water)],...        
    'Selected_Output',...
    '-soln false',...
    '-state false',...
    '-sim false',...
    '-distance false',...
    '-time false',...
    '-step false',...
    '-totals S(6) Ca Sr Ba Na Mg C(4) Cl',...
    '-molalities Surf_aCO3- Surf_aOH Surf_aH2+ Surf_aSO4- Surf_bH Surf_bMg+ Surf_bCa+',...
    '-equilibrium_phases Calcite Dolomite Anhydrite Gypsum Celestite Barite Dolomite',...
    '-saturation_indices Anhydrite Celestite Barite Gypsum Calcite Dolomite',...
    'END'};
    iphreeqc_code = sprintf('%s\n', IPCstringCell{:});
    iphreeqc.RunString( iphreeqc_code );
    phreeqc_out = iphreeqc.GetSelectedOutputArray;

    %updateing new concentrations
    prop_saver(i,1) = cell2mat(phreeqc_out(4,1)); %pH
    prop_saver(i,2) = cell2mat(phreeqc_out(4,2)); %pe
    
    SO4_new = cell2mat(phreeqc_out(4,3)).*96.0616./1000; % mass ratio
    
    Ca_new = cell2mat(phreeqc_out(4,4)).*40.08./1000; % mass ratio
    
    Sr_new = cell2mat(phreeqc_out(4,5)).*87.62./1000; % mass ratio
    
    Ba_new = cell2mat(phreeqc_out(4,6)).*137.34./1000; % mass ratio
    
    Na_new = cell2mat(phreeqc_out(4,7)).*22.9898./1000; % mass ratio
    
    Mg_new = cell2mat(phreeqc_out(4,8)).*24.312./1000; % mass ratio
    
    CO3_new = cell2mat(phreeqc_out(4,9)).*61.0173./1000; % mass ratio
    
    Cl_new = cell2mat(phreeqc_out(4,10)).*35.453./1000; % mass ratio
    
    Vol_calcite = cell2mat(phreeqc_out(4,19)).*0.1./2710*m_water;  % Calcite dissolution/precipitation in m^3
    Vol_dolomite = cell2mat(phreeqc_out(4,21)).*0.184./2840*m_water;  % Dolomite dissolution/precipitation in m^3
    Vol_Anhydrite   = cell2mat(phreeqc_out(4,23))*0.136/2320*m_water;    % Anhydrite precipitation in m^3
    Vol_Gypsum  = cell2mat(phreeqc_out(4,25))*0.172/2960*m_water;    % Gypsum precipitation in m^3
    Vol_Celestite   = cell2mat(phreeqc_out(4,27))*0.1836/3690*m_water;   % Celestite precipitation in m^3
    Vol_Barite   = cell2mat(phreeqc_out(4,29))*0.2332/4500*m_water;   % Barite precipitation in m^3
    scales = Vol_Anhydrite + Vol_Celestite + Vol_Barite + Vol_Gypsum+Vol_calcite+Vol_dolomite;
%     dissolution = Vol_dolomite;
    
    prop_saver(i,3)  = cell2mat(phreeqc_out(4,22))*m_water; % Anhydrite mol
    prop_saver(i,4)  = cell2mat(phreeqc_out(4,24))*m_water; % Gypsum mol
    prop_saver(i,5)  = cell2mat(phreeqc_out(4,26))*m_water; % Celestite mol
    prop_saver(i,6)  = cell2mat(phreeqc_out(4,28))*m_water; % Barite mol
    prop_saver(i,7)  = cell2mat(phreeqc_out(4,18))*m_water; % Calcite mol
    prop_saver(i,8)  = cell2mat(phreeqc_out(4,20))*m_water; % Dolomite mol
    prop_saver(i,9)  = cell2mat(phreeqc_out(3,30)); %SI Anhyrite
    prop_saver(i,10) = cell2mat(phreeqc_out(3,31)); %SI Celestite
    prop_saver(i,11) = cell2mat(phreeqc_out(3,32)); %SI Barite
    prop_saver(i,12) = cell2mat(phreeqc_out(3,33)); %SI Gypsum
    prop_saver(i,13) = cell2mat(phreeqc_out(3,34)); %SI Calcite
    prop_saver(i,14) = cell2mat(phreeqc_out(3,35)); %SI Dolomimte
    state.c_Ca(i) = Ca_new;%+cell2mat(phreeqc_out(4,17))*0.04008;
    state.c_Sr(i) = Sr_new;
    state.c_Ba(i) = Ba_new;
    state.c_SO4(i)= SO4_new;%+cell2mat(phreeqc_out(4,14))*0.0960616;
    state.c_Na(i) = Na_new;
    state.c_Mg(i) = Mg_new;%+cell2mat(phreeqc_out(4,16))*0.024312;
    state.c_CO3(i)= CO3_new;%+cell2mat(phreeqc_out(4,11))*0.0610173;
    state.c_Cl(i) = Cl_new;
    %% Here the petrophysical model changes! porosity and permeability will change
    phi_old = model.rock.poro(i);
%     phi_new = phi_old.*(1-(scales+dissolution)./model.operators.pv(i));
    phi_new = phi_old.*(1-scales./pv);
    %carman-cozeny model
    perm_old = model.rock.perm(i,:);
%     perm_new = perm_old.*(phi_new.^3./phi_old.^3 .* (1-phi_old).^2/(1-phi_new).^2);
%     perm_new = perm_old.*(phi_new./phi_old).^105;
%     perm_new = perm_old.*(phi_new.^2./phi_old.^2);
    beta = 200; %Sharma model
    perm_new = perm_old./(1+beta*(phi_old-phi_new)); %Permeability alteration model
    model.rock.poro(i) = phi_new;
    model.rock.perm(i,:) = perm_new(:);
end
%%
model.prop.pH{t,1} = prop_saver(:,1);
model.prop.pe{t,1} = prop_saver(:,2);
model.prop.Anhydrite{t,1} = prop_saver(:,3);
model.prop.AnhydriteSI{t,1} = prop_saver(:,9);
model.prop.Gypsum{t,1} = prop_saver(:,4);
model.prop.GypsumSI{t,1} = prop_saver(:,12);
model.prop.Celestite{t,1} = prop_saver(:,5);
model.prop.CelestiteSI{t,1} = prop_saver(:,10);
model.prop.Barite{t,1} = prop_saver(:,6);
model.prop.BariteSI{t,1} = prop_saver(:,11);
model.prop.Calcite{t,1} = prop_saver(:,7);
model.prop.CalciteSI{t,1} = prop_saver(:,13);
model.prop.Dolomite{t,1} = prop_saver(:,8);
model.prop.DolomiteSI{t,1} = prop_saver(:,14);

model.operators = setupOperatorsTPFA(model.G,model.rock);
